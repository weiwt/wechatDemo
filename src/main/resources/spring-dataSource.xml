<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.2.xsd
		   http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		   ">

    <!--载入使用到的配置-->
    <context:property-placeholder order="9" file-encoding="utf-8" location="
        classpath:data.properties,
    "/>

    <!-- 定义数据源Bean，使用C3P0数据源实现 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${ds.driverClass}" />
        <property name="jdbcUrl" value="${ds.jdbcUrl}" />
        <property name="user" value="${ds.user}" />
        <property name="password" value="${ds.password}" />
        <property name="minPoolSize" value="${ds.minPoolSize}" />
        <property name="maxPoolSize" value="${ds.maxPoolSize}" />
        <property name="initialPoolSize" value="${ds.initialPoolSize}" />
        <property name="maxIdleTime" value="300" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="acquireRetryAttempts" value="3" />
        <property name="acquireRetryDelay" value="300" />
        <property name="maxStatements" value="0" />
        <property name="maxStatementsPerConnection" value="100" />
        <property name="numHelperThreads" value="6" />
        <property name="maxAdministrativeTaskTime" value="5" />
        <property name="preferredTestQuery" value="SELECT 1" />
    </bean>

    <!--spring-tx-->
    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 注解事务管理器 -->
    <tx:annotation-driven transaction-manager="txManager"/>
    <!-- 事务管理模板 用于编程式事务 -->
    <bean id="txTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
   </bean>

    <!--mybatis-->
    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!--如果要用到mapper.xml的话-->
        <!--<property name="mapperLocations">-->
            <!--<list>-->
                <!--<value>classpath*:com/baturu/wms/biz/dal/mapper/**/*Mapper.xml</value>-->
            <!--</list>-->
        <!--</property>-->

    </bean>

    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="
            com.baturu.wms.biz.dal.dao,
            com.baturu.wms.biz.dal.utils.mybatis,
            com.baturu.wms.biz.dal.mapper
        "/>
    </bean>

    <!--dao扫描，因为mybatis的接入，导致扫描的都是接口，没什么用，主要用于查看究竟哪些dao被mybatis实例化了-->
    <context:component-scan base-package="com.wechat.wwt.dao"/>
</beans>

	